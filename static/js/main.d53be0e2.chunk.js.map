{"version":3,"sources":["apis/jsonPlaceholder.js","components/userHeader.js","actions/index.js","components/PostList.js","components/pagination.js","components/App.js","reducers/index.js","reducers/postReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","UserHeader","this","props","fetchUser","userId","user","className","name","React","Component","connect","state","ownProps","users","find","id","dispatch","a","jsonPlaceholder","get","response","type","payload","data","PostList","fetchPosts","posts","slice","map","post","title","body","renderList","Pagination","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"2NAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yC,OCwBLC,E,uKACF,WACEC,KAAKC,MAAMC,UAAUF,KAAKC,MAAME,U,oBAGlC,WAAU,IACAC,EAASJ,KAAKC,MAAdG,KAER,OAAKA,EAIE,qBAAKC,UAAU,SAAf,SAAyBD,EAAKE,OAH5B,S,GATUC,IAAMC,WAoBhBC,eAJW,SAACC,EAAOC,GAC9B,MAAO,CAAEP,KAAMM,EAAME,MAAMC,MAAK,SAAAT,GAAI,OAAIA,EAAKU,KAAOH,EAASR,aAK/D,CAAED,UCbqB,SAACY,GAAD,8CAAQ,WAAMC,GAAN,eAAAC,EAAA,sEACNC,EAAgBC,IAAI,UAAYJ,GAD1B,OACvBK,EADuB,OAG7BJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAHpB,2CAAR,wDDWVb,CAGbV,GE7CIwB,E,uKACJ,WACEvB,KAAKC,MAAMuB,e,wBAGb,WACE,OAAOxB,KAAKC,MAAMwB,MAAMC,MAAM,EAAE,GAAGC,KAAI,SAAAC,GACrC,OACE,sBAAKvB,UAAU,OAAf,UACE,mBAAGA,UAAU,mCACb,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,6BAAKuB,EAAKC,QACV,4BAAID,EAAKE,UAEX,cAAC,EAAD,CAAY3B,OAAUyB,EAAKzB,cAPJyB,EAAKd,S,oBActC,WACE,OAAO,qBAAKT,UAAU,0BAAf,SAA0CL,KAAK+B,mB,GAvBnCxB,IAAMC,WA+BdC,eAJS,SAAAC,GACtB,MAAO,CAAEe,MAAOf,EAAMe,SAKtB,CAAED,WDRsB,yDAAM,WAAMT,GAAN,eAAAC,EAAA,sEACPC,EAAgBC,IAAI,UADb,OACxBC,EADwB,OAG9BJ,EAAS,CAAEK,KAAM,cAAeC,QAASF,EAASG,OAHpB,2CAAN,wDCMXb,CAGbc,GCfaS,EAtBI,WACf,OACA,sBAAK3B,UAAW,qBAAhB,UACF,mBAAGA,UAAU,cAAb,eAGA,qBAAKA,UAAU,gBAAf,iBAGA,mBAAGA,UAAU,OAAb,gBAGA,mBAAGA,UAAU,OAAb,gBAGA,mBAAGA,UAAU,OAAb,oBCLa4B,EARH,WACV,OAAO,sBAAK5B,UAAU,eAAf,UAA8B,cAAC,EAAD,IAErC,cAAC,EAAD,Q,QCHa6B,cAAgB,CAC7BT,MCOa,WAAsB,IAArBf,EAAoB,uDAAd,GAAGyB,EAAW,uCAChC,OAAOA,EAAOf,MACV,IAAK,cACD,OAAOe,EAAOd,QAClB,QACI,OAAOX,IDXjBE,MENa,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIyB,EAAW,uCACnC,OAAQA,EAAOf,MACb,IAAK,aACH,MAAM,GAAN,mBAAWV,GAAX,CAAkByB,EAAOd,UAC3B,QACE,OAAOX,MCIT0B,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,cAAc,Y","file":"static/js/main.d53be0e2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://jsonplaceholder.typicode.com'\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUser } from '../actions';\r\n\r\n/*class UserHeader extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchUser(this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    const user = this.props.users.find(user => user.id === this.props.userId);\r\n\r\n    if (!user) {\r\n      return null;\r\n    }\r\n\r\n    return <div className=\"header\">{user.name}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { users: state.users };\r\n};\r\n\r\n*/\r\n// Make a habit of uding condition in mapStatetoprops\r\n\r\nclass UserHeader extends React.Component {\r\n    componentDidMount() {\r\n      this.props.fetchUser(this.props.userId);\r\n    }\r\n  \r\n    render() {\r\n      const { user } = this.props;\r\n  \r\n      if (!user) {\r\n        return null;\r\n      }\r\n  \r\n      return <div className=\"header\">{user.name}</div>;\r\n    }\r\n  }\r\n  \r\n  const mapStateToProps = (state, ownProps) => {\r\n    return { user: state.users.find(user => user.id === ownProps.userId) };\r\n  }; \r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchUser }\r\n)(UserHeader);\r\n","//import jsonPlaceholder from '../apis/jsonPlaceholder';\r\n\r\n/*export const fetchPosts = async () => {\r\n  return function(dispatch, getState){\r\n       const response = await jsonPlaceholder.get('/posts');\r\n\r\n  return {\r\n    type: 'FETCH_POSTS',\r\n    payload: response,\r\n  };\r\n  };\r\n   \r\n};\r\n\r\n*/\r\n\r\n/*\r\nexport const fetchPosts = async () => {\r\n    return async function(dispatch, getState){\r\n         const response = await jsonPlaceholder.get('/posts');\r\n  \r\n    dispatch({type: 'FETCH_POSTS', payload: response})\r\n    };\r\n     \r\n  };\r\n\r\n  */\r\n\r\n import jsonPlaceholder from '../apis/jsonPlaceholder';\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n  const response = await jsonPlaceholder.get('/posts');\r\n\r\n  dispatch({ type: 'FETCH_POSTS', payload: response.data });\r\n};\r\n\r\nexport const fetchUser = (id) => async dispatch => {\r\n    const response = await jsonPlaceholder.get('/users/' + id)\r\n\r\n    dispatch({ type: 'FETCH_USER', payload: response.data});\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts } from '../actions';\r\nimport UserHeader from './userHeader';\r\n\r\nclass PostList extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchPosts();\r\n  }\r\n\r\n  renderList() {\r\n    return this.props.posts.slice(0,4).map(post => {\r\n      return (\r\n        <div className=\"item\" key={post.id}>\r\n          <i className=\"large middle aligned icon user\" />\r\n          <div className=\"content\">\r\n            <div className=\"description\">\r\n              <h2>{post.title}</h2>\r\n              <p>{post.body}</p>\r\n            </div>\r\n            <UserHeader userId = {post.userId}/>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { posts: state.posts };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchPosts }\r\n)(PostList);\r\n","import React from 'react';\r\n\r\nconst Pagination = () => {\r\n    return (\r\n    <div className =\"ui pagination menu\">\r\n  <a className=\"active item\">\r\n    1\r\n  </a>\r\n  <div className=\"disabled item\">\r\n    ...\r\n  </div>\r\n  <a className=\"item\">\r\n    10\r\n  </a>\r\n  <a className=\"item\">\r\n    11\r\n  </a>\r\n  <a className=\"item\">\r\n    12\r\n  </a>\r\n  </div>\r\n    );\r\n}\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport PostList from './PostList';\r\nimport Pagination from './pagination';\r\n\r\nconst App = () => {\r\n  return <div className=\"ui container\"><PostList/>\r\n  \r\n  <Pagination/>\r\n  \r\n  </div>;\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport postsReducer from './postReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n  posts: postsReducer,\r\n  users: usersReducer\r\n});\r\n","/*export default (state=[],action) => {\r\n    if(action.type==='FETCH_POSTS'){\r\n        return action.payload;\r\n    }\r\n\r\n    return state;\r\n};\r\n\r\n*/\r\n\r\n\r\n\r\nexport default (state=[],action) => {\r\n    switch(action.type){\r\n        case 'FETCH_POSTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export default (state = [], action) => {\r\n    switch (action.type) {\r\n      case 'FETCH_USER':\r\n        return [...state, action.payload];\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}